/* NFT Sales Analysis 

A descriptive and Regression Analysis of 220 NFT collections to determine what drives sales and value.


*/

/* Importing data */

filename csvdata "NFTCollectionsDataset.csv";

proc import datafile=csvdata out= nftdata dbms=csv replace ; 

/* Variable Labels 

	Financial Variables 

 collection		=		"Name of collection";
 sales				=		"No. of all-time sales in dollars";
 buyers			=		"No. of all-time buyers";
 transactions		=		"No. of all-time transactions";
 owners			=		"No. of current owners";
 totalQty			=		"Total quantity of entire collection";
 inceptionDate		=		"Date Created, MM/DD/YYYY";

	Marketing/Advertising Variables 
 age			=		"Time between inception date and dataset created(in days)";
 hasWebsite	=		"Has own private website";
 tweets		=		"No. of tweets on Twitter profile";
 twitterSize	=		"No. of followers on Twitter profile";
 discordSize	=		"No. of followers on Discord channel";

	Infrastructure/Development Variables
		Note: these booleans marked as TRUE(1) so long as mentioned as a future goal. 
		Doesn’t imply they exist currently.

 teamSize			=	"# of people developing project";
 hasRoadmap		=	"Has roadmap or whitepaper detailing future development";
 hasMetaverse		=	"Has its own virtual world";
 hasTokens			=	"Has its own cryptocurrency";
 hasStaking		=	"Allows storing NFTs to generate tokens";
 hasGame			=	"Has its own online game";
 hasP2E			=	"Has play-to-earn capabilities in its game";
 hasRewards		=	"Offers rewards and/or benefits that aren’t directly monetary";
 isFollowup		=	"Is a followup/sequel collection to an already established brand";
 requiresPriorNFT	=	"Must own an NFT from another collection to own and/or utilize";

	Art Content Variables
		Note: Some of these are highly subjective, 
			but I did my best to categorize accurately

 isCharacter		=	"Is a humanoid character of some kind";
 isPixel			=	"Is composed of pixel art";
 is3D				=	"Is composed of 3D art";
 isCute			=	"Utilizes cuteness appeal";
 isCartoony		=	"Has exaggerated/silly features";
 isRealistic		=	"Has realistically detailed features";
 isSexy			=	"Utilizes sex appeal";
 isAbstract		=	"Is abstract, lacks coherence, or is non-visual";
 isHidden			=	"Obscures what the NFT looks like until purchased";
 isGenerated		=	"Is randomly generated (as opposed to handcrafted)";
 isAnimated		=	"Is animated";
 */

	/* All X variables listed for easy copy/paste */
/*
	 	buyers transactions owners totalQty 
		age teamsize tweets twitterSize discordSize 
		hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowup requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated
*/

/*----------------------- Examining Data -------------------------------*/

proc contents data=nftdata; run;

proc means data = nftdata;
	var sales buyers transactions owners totalQty 
		age teamsize tweets twitterSize discordSize ;
run;

proc summary data=nftdata print n mean std min p5 p25 median p75 p95 max range;
	var sales buyers owners transactions totalqty;  run;

proc summary data=nftdata print n mean std min p5 p25 median p75 p95 max range;
	var age teamsize tweets twittersize discordsize;  run;

proc summary data = nftdata print n;
	var hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowupcollection requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated; run;


proc freq data = nftdata;
	tables hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking hasGame hasP2E hasRewards 
			isFollowupcollection requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated;;
	run;

proc univariate data = nftdata;
	var sales buyers owners;
	run;

proc corr data=nftdata noprob nosimple best = 7; run;


/* ------------------ Looking at outliers------------------ */

proc sgplot data=nftdata;
  histogram sales;
  density sales;
run;

proc sgplot data=nftdata;
  histogram age;
  density age;
run;

proc sgplot data=nftdata;
  histogram teamsize;
  density teamsize;
run;

proc sgplot data=nftdata;
  histogram twittersize;
  density twittersize;
run;

proc sgplot data = nftdata;
	scatter y = sales x= transactions; run;

proc sgplot data = nftdata;
	vbar buyers  /response = sales; run;

proc sgplot data = nftdata;
	vbar transactions  /response = sales; run;

proc sgplot data = nftdata;
	vbar owners /response = sales; run;


proc sgplot data = nftdata;
	vbox sales;
	run;
proc sgplot data = nftdata;
	vbox teamsize;
	run;
proc sgplot data = nftdata;
	vbox tweets;
	run;
proc sgplot data = nftdata;
	vbox twittersize;
	run;
proc sgplot data = nftdata;
	vbox discordsize;
	run;		
proc sgplot data = nftdata;
	vbox age;
	run;	
	proc sgplot data = nftdata;
	vbox totalqty;
	run;	


/* ---------------------------Cleaning Data---------------------------- */
/* Missing values imputed by comparing variable to means of correlated variables */

	data nftdata_clean; set nftdata;
		drop collection inceptiondate;
		rename isfollowupcollection = isFollowup;
		if teamsize = '.' and totalqty < 8888 and hasp2e = 0 then teamsize = 6;
		if teamsize = '.' and totalqty < 8888 and hasp2e = 1 then teamsize = 10;
		if teamsize = '.' and totalqty >= 8888 and hasp2e = 0 then teamsize = 8;
		if teamsize = '.' and totalqty >= 8888 and hasp2e = 1 then teamsize = 19;
		if owners = '.' and 5000 <= buyers <= 6000 then owners = 4000;
		if owners = '.' and buyers <= 5000 then owners = 2750;
		if owners = '.' and buyers >= 6000 then owners = 8000;
		/* Some variant sales comparisons */
			logsales = log(sales);
			salesPerTrans = sales / transactions ;
			dailySales = sales /age ;
			dailyTransactions = transactions / age ;
			salesperitem = sales / totalQty;
			logdailysales = log(dailysales);
			logsalespertrans = log(salespertrans);
		run;

	proc means data = nftdata_clean;
	var sales dailysales dailytransactions salesperitem logdailysales logsalespertrans ;
	run;

	data nftdata_trimmed; set nftdata_clean;
		if sales > 300000000 then delete;
		/*
		if transactions > 2500000 then delete;
		if twittersize > 1000000 then delete;
		if discordsize > 350000 then delete;
		if age > 1500 then delete;
		if totalqty > 30000 then delete;
		*/
	run;

proc univariate data = nftdata_clean;
	var logsales;
	run;
proc contents data = nftdata_clean; run;

/* Plots with deleted outliers */
proc sgplot data = nftdata_trimmed;
	vbox sales;
	run;
proc sgplot data = nftdata_trimmed;
	vbox teamsize;
	run;
proc sgplot data = nftdata_trimmed;
	vbox tweets;
	run;
proc sgplot data = nftdata_trimmed;
	vbox twittersize;
	run;
proc sgplot data = nftdata_trimmed;
	vbox discordsize;
	run;		
proc sgplot data = nftdata_trimmed;
	vbox age;
	run;	
	proc sgplot data = nftdata_trimmed;
	vbox totalqty;
	run;	


/*-------------------- Exploratory Regression for Sales-------------------- */




proc reg data=nftdata_clean;
     model sales = buyers transactions owners totalQty age teamsize
		hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowup requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated / VIF    ;
    Output out=regout predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout;
	scatter y=yhat x=sales;
	run;


proc reg data=nftdata_clean;
     model sales =  transactions totalQty age teamsize
		twitterSize discordSize hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isCharacter isFollowup requiresPriorNFT isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated / VIF    ;
    Output out=regout predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout;
	scatter y=yhat x=sales;
	run;

/* Trimmed Data */
proc reg data=nftdata_trimmed;
     model sales = buyers transactions owners totalQty age teamsize
		hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowup requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated / VIF    ;
    Output out=regout predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout;
	scatter y=yhat x=sales;
	run;


/*--------------------- Regression for log(Sales)--------------------------- */

proc reg data=nftdata_clean;
     model logsales = buyers transactions owners totalQty age teamsize
		hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowup requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated / VIF    ;
	Output out=regout predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout;
	scatter y=yhat x=logsales;
	reg y=yhat x=logsales;
	run;

proc reg data=nftdata_clean;
     model logsales = transactions owners totalQty age 
		tweets twitterSize discordSize hasRoadmap hasMetaverse
		 hasP2E isFollowup isPixel is3D 
		isCartoony isHidden isAnimated / VIF    ;
     Output out=regout predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout;
	scatter y=yhat x=logsales;
	reg y=yhat x=logsales;
	run;


/* ------------------------Cluster Analysis-------------------------------- */

/* Clustering social media traits */

proc corr data = nftdata_clean; run;

proc cluster data=nftdata_clean out= clusterdata1 method = ward ccc pseudo print = 20;
	var tweets twittersize discordsize;
	
	run;

proc cluster data=nftdata_clean out= clusterdata1 method = ward ccc pseudo print = 6;
	var tweets twittersize discordsize;
	copy sales;
	run;

proc tree data = clusterdata1 out = treedata1 ncl = 8;
	copy sales tweets twittersize discordsize;
	run;

proc sgplot data = treedata1;
	scatter x= twittersize y= tweets / group = cluster;
	where tweets < 10000 and twittersize < 1000000;
	run;

proc sgplot data = treedata1;
	scatter x= discordsize y=twittersize /group = cluster;
	where twittersize < 1000000 and discordsize < 350000;
	run;

proc glm data = treedata1;
class cluster;
model sales = cluster /solution;
Output out=glmout ;
run;

data clusterdums ; set glmout;
	if cluster = 1 then cluster1 = 1; else cluster1 = 0;
	if cluster = 2 then cluster2 = 1; else cluster2 = 0;
	if cluster = 3 then cluster3 = 1; else cluster3 = 0;
	if cluster = 4 then cluster4 = 1; else cluster4 = 0;
	if cluster = 5 then cluster5 = 1; else cluster5 = 0;
	if cluster = 6 then cluster6 = 1; else cluster6 = 0;
	if cluster = 7 then cluster7 = 1; else cluster7 = 0;
run;


/* ---------------Merging & Running regression with clusters----------------- */

proc sort data=nftdata_clean;
	by sales;
	run;
proc sort data=clusterdums;
	by sales;
	run;

data nftdata_glm;
	rename cluster4 = highTwitterSubs;
	drop clusname cluster _name_ ;
	merge nftdata_clean clusterdums;
	by sales;
	label highTwitterSubs = 'has ~1M twitter followers';
	run;

proc contents data=nftdata_glm; run;
proc print data = nftdata_glm;
	var teamsize; run;

proc print data=nftdata_glm;
	var hightwittersubs logsales; run;

proc reg data=nftdata_glm;
     model sales = transactions totalQty age 
		isHidden isGenerated
		hightwittersubs / VIF    ;
    Output out=regout_glm predicted=yhat residual=res1 ;
     run ;

proc sgplot data= regout_glm;
	scatter y=yhat x=sales;
	reg y=yhat x=sales;
	run;
proc sgplot data= regout_glm;
	scatter y=yhat x=sales;
	where sales < 500000000;
	run;

/* --------------------------------Training Set------------------------------- */



%let indep_var = buyers transactions owners totalQty age teamsize
		hasWebsite hasRoadmap hasMetaverse hasTokens hasStaking 
		hasGame hasP2E hasRewards isFollowup requiresPriorNFT isCharacter isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated hightwittersubs;
	
proc surveyselect data= nftdata_glm  method=srs seed=111111 outall samprate=0.75 out= nftdata_subset;
run;

proc freq data=nftdata_subset; tables selected ; 
 run;

data training;
   set nftdata_subset;

       y = sales ;
   if selected=0 then y = '.' ;
run;


proc reg data=training ;
	model y = &indep_var;  
			output out=r1(where=(y=.)) p=yhat1 ;
	model y = transactions totalQty age isHidden isGenerated hightwittersubs;
			output out=r2(where=(y=.)) p=yhat2 ;
	model y = transactions totalQty age hightwittersubs
		hasRoadmap hasStaking hasP2E hasRewards isFollowup isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated;
			output out=r3(where=(y=.)) p=yhat3 ;
	model y = &indep_var /selection = stepwise;  
			output out=r4(where=(y=.)) p=yhat4 ;
	model y = &indep_var /selection = adjrsq; 
			output out=r5(where=(y=.)) p=yhat5 ;
		run;



	proc reg data=training ;
		model y = transactions totalQty age isGenerated hightwittersubs;
			output out=r2(where=(y=.)) p=yhat2 ;
			run;

/* Model 4 (stepwise) output: y = buyers owners age hasroadmap ishidden isgenerated hightwittersubs
   Model 5 (adj R^2) output: y = buyers transactions owners age hasRoadmap hasGame hasRewards 
								requiresPriorNFT isAbstract isHidden isGenerated highTwitterSubs
*/


/* ---------------------------------------Test Data------------------------------- */

data allr_train ; merge r1 r2 r3 r4 r5; 
  yorg = sales  ;
  e1 = yorg - yhat1 ;
  e2 = yorg - yhat2 ;
  e3 = yorg - yhat3 ;
  e4 = yorg - yhat4 ;
  e5 = yorg - yhat5 ;
  rmse1 = ((e1)**2)**0.5 ; 
  rmse2 = ((e2)**2)**0.5 ; 
  rmse3 = ((e3)**2)**0.5 ; 
  rmse4 = ((e4)**2)**0.5 ;
  rmse5 = ((e5)**2)**0.5 ;  
  mse1 = (e1)**2 ; 
  mse2 = (e2)**2 ; 
  mse3 = (e3)**2 ; 
  mse4 = (e4)**2 ; 
  mse5 = (e5)**2 ; 
  mae1 = abs(e1) ; 
  mae2 = abs(e2) ; 
  mae3 = abs(e3) ; 
  mae4 = abs(e4) ; 
  mae5 = abs(e5) ;
  mpe1 = abs((e1)/yorg) ; 
  mpe2 = abs((e2)/yorg) ; 
  mpe3 = abs((e3)/yorg) ; 
  mpe4 = abs((e4)/yorg) ; 
  mpe5 = abs((e5)/yorg) ; 
run ;
proc means n mean data=allr_train maxdec=4 ; var rmse: mse: mae: mpe:  ;  run ;

/*
	Model 1
	Model 2
	Model 1
	Model 2 */


data test;
   set nftdata_subset;
       Y = sales  ;
   if selected=1 then Y = '.' ;
run;

proc freq data = testing;
run;

proc reg data=test;
	model y = &indep_var;  
			output out=r1(where=(y=.)) p=yhat1 ;
	model y = transactions totalQty age isGenerated hightwittersubs;
			output out=r2(where=(y=.)) p=yhat2 ;
	model y = transactions totalQty age hightwittersubs
		hasRoadmap hasStaking hasP2E hasRewards isFollowup isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated;
			output out=r3(where=(y=.)) p=yhat3 ;
	model y = &indep_var /selection = stepwise;  
			output out=r4(where=(y=.)) p=yhat4 ;
	model y = &indep_var /selection = adjrsq; 
			output out=r5(where=(y=.)) p=yhat5 ;
		run;

	proc reg data=test;
	model y = transactions totalQty age isGenerated isHidden hightwittersubs;
			output out=r6(where=(y=.)) p=yhat6 ;
			run;

/* Model 4 (stepwise) output: y = isGenerated isCute isRealistic hasMetaverse isAnimated
   Model 5 (adj R^2) output: y = buyers totalQty teamSize hasMetaverse hasGame isFollowup requiresPriorNFT 
									isCute isRealistic isHidden isAnimat
*/


/* -------------------------------- Error estimations -------------------------- */
data allr_test ; merge r1 r2 r3 r4 r5; 
  yorg = sales  ;
  e1 = yorg - yhat1 ;
  e2 = yorg - yhat2 ;
  e3 = yorg - yhat3 ;
  e4 = yorg - yhat4 ;
  e5 = yorg - yhat5 ;
  rmse1 = ((e1)**2)**0.5 ; 
  rmse2 = ((e2)**2)**0.5 ; 
  rmse3 = ((e3)**2)**0.5 ; 
  rmse4 = ((e4)**2)**0.5 ;
  rmse5 = ((e5)**2)**0.5 ;  
  mse1 = (e1)**2 ; 
  mse2 = (e2)**2 ; 
  mse3 = (e3)**2 ; 
  mse4 = (e4)**2 ; 
  mse5 = (e5)**2 ; 
  mae1 = abs(e1) ; 
  mae2 = abs(e2) ; 
  mae3 = abs(e3) ; 
  mae4 = abs(e4) ; 
  mae5 = abs(e5) ;
  mpe1 = abs((e1)/yorg) ; 
  mpe2 = abs((e2)/yorg) ; 
  mpe3 = abs((e3)/yorg) ; 
  mpe4 = abs((e4)/yorg) ; 
  mpe5 = abs((e5)/yorg) ; 
run ;
proc means n mean data=allr_test maxdec=4 ; var rmse: mse: mae: mpe:  ;  run ;

/*
RMSE = model 2
MSE = model 5
MAE = model 2
MPE = model 4


Model 2: y = transactions totalQty age isHidden isGenerated hightwittersubs
*/


proc freq data = nftdata_glm ;



/* -------------------Test Regressions with ln(sales) ------------------------*/

data training_log;
   set nftdata_subset;
       y = logsales ;
   if selected=0 then y = '.' ;
run;

proc reg data=training_log ;
	model y = &indep_var;  
			output out=r1(where=(y=.)) p=yhat1 ;
	model y = transactions totalQty age isHidden isGenerated hightwittersubs;
			output out=r2(where=(y=.)) p=yhat2 ;
	model y = transactions totalQty age hightwittersubs
		hasRoadmap hasStaking hasP2E hasRewards isFollowup isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated;
			output out=r3(where=(y=.)) p=yhat3 ;
	model y = &indep_var /selection = stepwise;  
			output out=r4(where=(y=.)) p=yhat4 ;
	model y = &indep_var /selection = adjrsq; 
			output out=r5(where=(y=.)) p=yhat5 ;
		run;

data allr_test ; merge r1 r2 r3 r4 r5; 
  yorg = logsales  ;
  e1 = yorg - yhat1 ;
  e2 = yorg - yhat2 ;
  e3 = yorg - yhat3 ;
  e4 = yorg - yhat4 ;
  e5 = yorg - yhat5 ;
  rmse1 = ((e1)**2)**0.5 ; 
  rmse2 = ((e2)**2)**0.5 ; 
  rmse3 = ((e3)**2)**0.5 ; 
  rmse4 = ((e4)**2)**0.5 ;
  rmse5 = ((e5)**2)**0.5 ;  
  mse1 = (e1)**2 ; 
  mse2 = (e2)**2 ; 
  mse3 = (e3)**2 ; 
  mse4 = (e4)**2 ; 
  mse5 = (e5)**2 ; 
  mae1 = abs(e1) ; 
  mae2 = abs(e2) ; 
  mae3 = abs(e3) ; 
  mae4 = abs(e4) ; 
  mae5 = abs(e5) ;
  mpe1 = abs((e1)/yorg) ; 
  mpe2 = abs((e2)/yorg) ; 
  mpe3 = abs((e3)/yorg) ; 
  mpe4 = abs((e4)/yorg) ; 
  mpe5 = abs((e5)/yorg) ; 
run ;
proc means n mean data=allr_test maxdec=4 ; var rmse: mse: mae: mpe:  ;  run ;


/* Best model for log(sales): Model 4 @ .3913 Adj. r-sq 
				*/

/* Test Data for log(sales) */
data test_log;
   set nftdata_subset;
       Y = logsales  ;
   if selected=1 then Y = '.' ;
run;

proc reg data=test_log;
	model y = &indep_var;  
			output out=r1(where=(y=.)) p=yhat1 ;
	model y = transactions totalQty age isGenerated hightwittersubs;
			output out=r2(where=(y=.)) p=yhat2 ;
	model y = transactions totalQty age hightwittersubs
		hasRoadmap hasStaking hasP2E hasRewards isFollowup isPixel is3D isCute 
		isCartoony isRealistic isSexy isAbstract isHidden isGenerated isAnimated;
			output out=r3(where=(y=.)) p=yhat3 ;
	model y = &indep_var /selection = stepwise;  
			output out=r4(where=(y=.)) p=yhat4 ;
	model y = &indep_var /selection = adjrsq; 
			output out=r5(where=(y=.)) p=yhat5 ;
		run;

/* -------------------------------- Error estimations -------------------------- */
									/* for log(sales) */

data allr_test ; merge r1 r2 r3 r4 r5; 
  yorg = logsales  ;
  e1 = yorg - yhat1 ;
  e2 = yorg - yhat2 ;
  e3 = yorg - yhat3 ;
  e4 = yorg - yhat4 ;
  e5 = yorg - yhat5 ;
  rmse1 = ((e1)**2)**0.5 ; 
  rmse2 = ((e2)**2)**0.5 ; 
  rmse3 = ((e3)**2)**0.5 ; 
  rmse4 = ((e4)**2)**0.5 ;
  rmse5 = ((e5)**2)**0.5 ;  
  mse1 = (e1)**2 ; 
  mse2 = (e2)**2 ; 
  mse3 = (e3)**2 ; 
  mse4 = (e4)**2 ; 
  mse5 = (e5)**2 ; 
  mae1 = abs(e1) ; 
  mae2 = abs(e2) ; 
  mae3 = abs(e3) ; 
  mae4 = abs(e4) ; 
  mae5 = abs(e5) ;
  mpe1 = abs((e1)/yorg) ; 
  mpe2 = abs((e2)/yorg) ; 
  mpe3 = abs((e3)/yorg) ; 
  mpe4 = abs((e4)/yorg) ; 
  mpe5 = abs((e5)/yorg) ; 
run ;
proc means n mean data=allr_test maxdec=4 ; var rmse: mse: mae: mpe:  ;  run ;


/* Best test model (by far), Model 4 @ .4896 Adj. RSq: 
					log(sales)=isGenerated+isAnimated+isCute+isRealistic+hasP2E */




/* Cleaning Final Dataset */

data nftdata_final; set nftdata_glm;
	drop inceptiondate tweets twittersize discordsize cluster1 cluster2 cluster3 cluster5 cluster6 cluster7;
		run;

data nftdata_clean; set nftdata_clean;
	drop logsales; run;

proc contents data=nftdata_clean; run;
proc contents data=nftdata_final; run;


/* Exporting Datasets 

proc export data=nftdata_final
    outfile="\NFTDataset_final.csv"
    dbms=csv
    replace;
run;

proc export data=nftdata_clean
    outfile="\NFTDataset_clean.csv"
    dbms=csv
    replace;
run;
*/
